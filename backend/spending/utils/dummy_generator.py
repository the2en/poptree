from datetime import datetime, timedelta
import random
from spending.models import Spending
from django.utils import timezone

# 카드 소비 항목
CARD_MERCHANTS = [
    ("교보문고", "도서"), ("영풍문고", "도서"), ("YES24", "도서"), ("알라딘", "도서"), ("반디앤루니스", "도서"),
    ("패스트캠퍼스", "교육"), ("인프런", "교육"), ("에듀윌", "교육"), ("커넥트에듀", "교육"), ("클래스101", "교육"),
    ("짐박스", "건강"), ("헬스존", "건강"), ("요가스튜디오", "건강"), ("바디챌린지", "건강"), ("굿헬스", "건강"),
    ("굿네이버스", "기부"), ("유니세프", "기부"), ("월드비전", "기부"),
    ("GS25", "편의점"), ("CU", "편의점"), ("세븐일레븐", "편의점"),
    ("배달의민족", "배달"), ("요기요", "배달"), ("쿠팡이츠", "배달"), ("땡겨요", "배달"), ("배민1", "배달"),
    ("술집", "술"), ("펍앤그릴", "술"), ("와인바", "술"), ("맥주창고", "술"),
    ("넷마블", "게임"), ("넥슨", "게임"), ("스팀", "게임"), ("리그오브레전드", "게임"), ("에픽게임즈", "게임"),
    ("스타벅스", "카페"), ("이디야", "카페"), ("커피빈", "카페"), ("폴바셋", "카페"), ("빽다방", "카페"),
    ("무신사", "의류"), ("지그재그", "의류"), ("29CM", "의류"), ("W컨셉", "의류"), ("H&M", "의류"),
    ("다이소", "생활용품"), ("모나미", "생활용품"), ("생활공작소", "생활용품"), ("자취방연구소", "생활용품"),
    ("이마트", "마트"), ("홈플러스", "마트"), ("롯데마트", "마트"), ("코스트코", "마트"), ("농협하나로마트", "마트"),
    ("삼성디지털프라자", "전자기기"), ("애플스토어", "전자기기"), ("하이마트", "전자기기"), ("전자랜드", "전자기기"), ("LG전자베스트샵", "전자기기"),
    ("쿠쿠홈시스", "가전제품"), ("위니아", "가전제품"), ("삼성전자", "가전제품"), ("LG전자", "가전제품"),
    ("트리바고", "여행"), ("야놀자", "여행"), ("에어비앤비", "여행"), ("하나투어", "여행"),
    ("대한항공", "항공"), ("아시아나", "항공"), ("제주항공", "항공"),
    ("호텔신라", "숙박"), ("롯데호텔", "숙박"), ("호텔나우", "숙박"), ("여기어때", "숙박"),
    ("에버랜드", "관광"), ("롯데월드", "관광"), ("서울랜드", "관광"),
    ("KTX", "교통"), ("SRT", "교통"), ("티머니", "교통"), ("카카오T", "교통"),
    ("GS칼텍스", "주유"), ("SK에너지", "주유"), ("현대오일뱅크", "주유"),
    ("불스원", "자동차관리"), ("오토오아시스", "자동차관리"), ("카닥", "자동차관리"),
    ("KT", "통신"), ("LG U+", "통신"), ("SK텔레콤", "통신"),
    ("KT 인터넷", "인터넷"), ("LG U+ 인터넷", "인터넷"),
    ("넷플릭스", "OTT"), ("디즈니+", "OTT"), ("왓챠", "OTT"),
    ("멜론", "음악스트리밍"), ("스포티파이", "음악스트리밍"),
    ("크로스핏박스", "헬스장"), ("피트니스월드", "헬스장"), ("헬스보이짐", "헬스장"),
    ("삼성병원", "병원비"), ("서울대병원", "병원비"),
    ("온누리약국", "약국"), ("건강약국", "약국"),
    ("나이키", "운동용품"), ("아디다스", "운동용품"), ("언더아머", "운동용품"),
    ("펫프렌즈", "반려동물"), ("강아지대통령", "반려동물"), ("코코스퀘어", "반려동물"),
    ("아가방", "유아용품"), ("베이비페어", "유아용품"),
    ("어린이집", "육아/보육"), ("맘앤톡", "육아/보육"),
    ("레고스토어", "장난감"), ("토이트론", "장난감"),
    ("카카오선물하기", "선물"), ("G마켓", "선물"), ("SSG.COM", "선물"),
    ("부의금송금", "경조사비"), ("축의금송금", "경조사비"),
    ("CGV", "문화생활"), ("메가박스", "문화생활"), ("세종문화회관", "문화생활"),
    ("하비팩토리", "취미"), ("미술마트", "취미"), ("피아노월드", "취미"),
    ("토익인강", "자기계발"), ("컴활마스터", "자기계발"),
    ("아모레퍼시픽", "뷰티/미용"), ("올리브영", "뷰티/미용"), ("미용실", "뷰티/미용"),
    ("이사모아", "이사/청소"), ("미스터홈즈", "이사/청소"),
    ("기타잡비", "잡비"), ("현금사용", "잡비")
]


# 계좌 이체 항목
ACCOUNT_MEMOS = [
    ("정기예금 이체", "저축"), ("적금 자동이체", "저축"),
    ("비상금 통장 입금", "저축"), ("청약통장 입금", "저축"),
    ("주택마련 저축", "저축"), ("아이교육비 적금", "저축"),
    ("카카오페이 송금", "무지출"), ("토스 송금", "무지출"),
    ("현금인출", "무지출"), ("내 계좌 간 이체", "무지출"), ("더치페이 정산", "무지출"),
    ("전기요금", "공과금"), ("수도요금", "공과금"),
    ("가스요금", "공과금"), ("지역난방 요금", "공과금"),
    ("재산세 납부", "공과금"), ("TV수신료", "공과금"),
    ("교통카드 충전", "교통"), ("버스카드", "교통"),
    ("택시비 이체", "교통"), ("KTX 예매", "교통"),
    ("카카오T 결제", "교통"), ("SRT 예약", "교통"),
    ("집세 이체", "주거"), ("관리비", "주거"),
    ("전세대출 상환", "주거"), ("보증금 입금", "주거"), ("이사비용", "주거"),
    ("반려동물 병원", "기타"), ("명절 선물", "기타"), ("부모님 용돈", "기타"),
    ("잡화점 결제", "기타"), ("가사도우미 비용", "기타"),
    ("기부금 이체", "기부"), ("사회복지기부", "기부"), ("환경단체 후원", "기부"),
]


def generate_dummy_spending(user, initial=True):
    today = timezone.now().date()

    # 시작일: 1년 전
    if initial:
        start_date = today - timedelta(days=365)
    else:
        latest = Spending.objects.filter(user=user).order_by('-date').first()
        if latest:
            start_date = latest.date.date() + timedelta(days=1)
        else:
            start_date = today - timedelta(days=365)

    end_date = today

    for i in range((end_date - start_date).days):
        raw_date = start_date + timedelta(days=i)
        aware_date = timezone.make_aware(datetime.combine(raw_date, datetime.min.time()))

        # 카드 소비 생성
        merchant, category = random.choice(CARD_MERCHANTS)
        amount = random.randint(3000, 150000)
        Spending.objects.create(
            user=user,
            amount=amount,
            date=aware_date,
            category=category,
            source="카드",
            card_id=f"C{random.randint(1000, 9999)}",
            merchant_name=merchant,
            status="01",
            currency_code="KRW"
        )

        # 계좌 소비 생성
        memo, category = random.choice(ACCOUNT_MEMOS)
        amount = random.randint(5000, 250000)
        Spending.objects.create(
            user=user,
            amount=amount,
            date=aware_date,
            category=category,
            source="계좌",
            account_num=f"110-{random.randint(100,999)}-{random.randint(100000,999999)}",
            trans_type="02",
            trans_memo=memo,
            currency_code="KRW"
        )
